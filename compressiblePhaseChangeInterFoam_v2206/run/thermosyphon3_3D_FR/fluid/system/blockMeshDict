/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//========================
// CONTROLS

// number of cells
Nx   500;
NRinner   4;
NRouter   8;
squareLim 0.45;  //Limit between square and round mesh

// size ratio of cell at the wall to the free-stream one in the near-wall blocks
expRatWall   0.3333333; // for BL
expRatWall2   1; // pipe-axis direction

//========================

convertToMeters 1;

// all the vertices are in non-dimensional units
// pipe assumed to have length and radius of 1
vertices
(
    (0.00000e+00 0.00000e+00 0.00000e+00)
	(0.00000e+00 0.00000e+00 $squareLim )
	(0.00000e+00 0.00000e+00 1.00000e+00)
	(0.00000e+00 $squareLim  $squareLim)
	(0.00000e+00 $squareLim  0.00000e+00)
	(0.00000e+00 1.00000e+00 0.00000e+00)
	(0.00000e+00 7.07107e-01 7.07107e-01)

	(1 0.00000e+00 0.00000e+00)
	(1 0.00000e+00 $squareLim )
	(1 0.00000e+00 1.00000e+00)
	(1 $squareLim  $squareLim)
	(1 $squareLim  0.00000e+00)
	(1 1.00000e+00 0.00000e+00)
	(1 7.07107e-01 7.07107e-01)
);

blocks
(
    hex (0 7 11 4 1 8 10 3) ($Nx $NRinner $NRinner) simpleGrading ($expRatWall2 1 1)
    
    hex (4 11 12 5 3 10 13 6) ($Nx $NRouter $NRinner)
    simpleGrading  ($expRatWall2 $expRatWall 1)
/*    (
        $expRatWall2 
        ((0.7778 0.75 $expRatWall) (0.2222 0.25 1))
        1
    )
*/

    hex (3 10 13 6 1 8 9 2) ($Nx $NRouter $NRinner) 
    simpleGrading  ($expRatWall2 $expRatWall 1)
/*    (
        $expRatWall2 
        ((0.7778 0.75 $expRatWall) (0.2222 0.25 1))
        1
    )
*/
);

edges
(
	line 1 3 
	line 3 4 
	line 8 10 
	line 10 11 

	
	arc 2 6 (0 0.38268343236508978 0.92387953251128674)
	arc 6 5 (0 0.92387953251128674 0.38268343236508978)
	
	arc 9 13 (1 0.38268343236508978 0.92387953251128674)
	arc 13 12 (1 0.92387953251128674 0.38268343236508978)
);

boundary
(
    bottom
    {
        type wall;
        faces
        (
            (1 2 6 3)
            (3 6 5 4)
            (0 1 3 4)
        );
    }
    top
    {
        type wall;
        faces
        (
            (11 10 8 7)
            (12 13 10 11)
            (13 9 8 10)
        );
    }
    
    internalFluidWalls
    {
        type mappedWall;

        // What to sample:
        sampleMode      nearestPatchFace;

        // Simulation world to sample
        sampleWorld     solid;

        // Region to sample
        sampleRegion    region0;

        // If sampleMode is nearestPatchFace : patch to find faces of
        samplePatch     internalSolidWalls;

        // Use database to get data from (one-way or loose coupling in
        // combination with functionObject)
        sampleDatabase    true;


        faces
        (
            (9 13 6 2)
            (13 12 5 6)
        );
    }
    symmetryVer
    {
        type symmetryPlane;
        faces
        (
            (2 9 8 1)
            (1 8 7 0)
        );
    }
    symmetryHor
    {
        type symmetryPlane;
        faces
        (
            (11 4 0 7)
            (12 5 4 11)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
